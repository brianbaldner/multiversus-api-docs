{
  "options": {
    "cc_generic_services": false,
    "optimize_for": "SPEED"
  },
  "nested": {
    "CGameNotifications_Variable": {
      "fields": {
        "key": {
          "type": "string",
          "id": 1,
          "options": {
            "(description)": "The name of the variable in the localized text -- anywhere that %variablename% is found within the text it will be substituded with the given value"
          }
        },
        "value": {
          "type": "string",
          "id": 2,
          "options": {
            "(description)": "The value of the variable to substitute in the localized text in place of the given variable.  Can itself be a localization token."
          }
        }
      }
    },
    "CGameNotifications_LocalizedText": {
      "fields": {
        "token": {
          "type": "string",
          "id": 1,
          "options": {
            "(description)": "A localization token that maps to the desired string."
          }
        },
        "variables": {
          "rule": "repeated",
          "type": ".CGameNotifications_Variable",
          "id": 2,
          "options": {
            "(description)": "A list of variables values to substitute in any variables found in the localized string."
          }
        },
        "rendered_text": {
          "type": "string",
          "id": 3,
          "options": {
            "(description)": "Text rendered in the requested language, complete with variable substitutions, if a language was specified."
          }
        }
      }
    },
    "CGameNotifications_UserStatus": {
      "fields": {
        "steamid": {
          "type": "fixed64",
          "id": 1,
          "options": {
            "(description)": "The specific user's steamid."
          }
        },
        "state": {
          "type": "string",
          "id": 2,
          "options": {
            "(description)": "The user's state.  ready -- the user is ready to play.  waiting -- The game is waiting on an action from the user. completed, the game is over."
          }
        },
        "title": {
          "type": ".CGameNotifications_LocalizedText",
          "id": 3,
          "options": {
            "(description)": "Title of the session to display to this user in their list of active sessions."
          }
        },
        "message": {
          "type": ".CGameNotifications_LocalizedText",
          "id": 4,
          "options": {
            "(description)": "Subtitle of the session to display to this user user within their list of active sessions."
          }
        }
      }
    },
    "CGameNotifications_CreateSession_Request": {
      "fields": {
        "appid": {
          "type": "uint32",
          "id": 1,
          "options": {
            "(description)": "The appid to create the session for."
          }
        },
        "context": {
          "type": "uint64",
          "id": 2,
          "options": {
            "(description)": "Game-specified context value the game can used to associate the session with some object on their backend."
          }
        },
        "title": {
          "type": ".CGameNotifications_LocalizedText",
          "id": 3,
          "options": {
            "(description)": "The title of the session to be displayed within each user's list of sessions."
          }
        },
        "users": {
          "rule": "repeated",
          "type": ".CGameNotifications_UserStatus",
          "id": 4,
          "options": {
            "(description)": "The initial state of all users in the session."
          }
        },
        "steamid": {
          "type": "fixed64",
          "id": 5,
          "options": {
            "(description)": "(Optional) steamid to make the request on behalf of -- if specified, the user must be in the session and all users being added to the session must be friends with the user."
          }
        }
      }
    },
    "CGameNotifications_CreateSession_Response": {
      "fields": {
        "sessionid": {
          "type": "uint64",
          "id": 1,
          "options": {
            "(description)": "The sessionid of the created session."
          }
        }
      }
    },
    "CGameNotifications_DeleteSession_Request": {
      "fields": {
        "sessionid": {
          "type": "uint64",
          "id": 1,
          "options": {
            "(description)": "The sessionid to delete."
          }
        },
        "appid": {
          "type": "uint32",
          "id": 2,
          "options": {
            "(description)": "The appid of the session to delete."
          }
        },
        "steamid": {
          "type": "fixed64",
          "id": 3,
          "options": {
            "(description)": "(Optional) steamid to make the request on behalf of -- if specified, the user must be in the session."
          }
        }
      }
    },
    "CGameNotifications_DeleteSession_Response": {
      "fields": {}
    },
    "CGameNotifications_UpdateSession_Request": {
      "fields": {
        "sessionid": {
          "type": "uint64",
          "id": 1,
          "options": {
            "(description)": "The sessionid to update."
          }
        },
        "appid": {
          "type": "uint32",
          "id": 2,
          "options": {
            "(description)": "The appid of the session to update."
          }
        },
        "title": {
          "type": ".CGameNotifications_LocalizedText",
          "id": 3,
          "options": {
            "(description)": "(Optional) The new title of the session.  If not specified, the title will not be changed."
          }
        },
        "users": {
          "rule": "repeated",
          "type": ".CGameNotifications_UserStatus",
          "id": 4,
          "options": {
            "(description)": "(Optional) A list of users whose state will be updated to reflect the given state. If the users are not already in the session, they will be added to it."
          }
        },
        "steamid": {
          "type": "fixed64",
          "id": 6,
          "options": {
            "(description)": "(Optional) steamid to make the request on behalf of -- if specified, the user must be in the session and all users being added to the session must be friends with the user."
          }
        }
      }
    },
    "CGameNotifications_UpdateSession_Response": {
      "fields": {}
    },
    "CGameNotifications_EnumerateSessions_Request": {
      "fields": {
        "appid": {
          "type": "uint32",
          "id": 1,
          "options": {
            "(description)": "The sessionid to request details for. Optional. If not specified, all the user's sessions will be returned."
          }
        },
        "include_all_user_messages": {
          "type": "bool",
          "id": 3,
          "options": {
            "(description)": "(Optional) Boolean determining whether the message for all users should be included. Defaults to false."
          }
        },
        "include_auth_user_message": {
          "type": "bool",
          "id": 4,
          "options": {
            "(description)": "(Optional) Boolean determining whether the message for the authenticated user should be included. Defaults to false."
          }
        },
        "language": {
          "type": "string",
          "id": 5,
          "options": {
            "(description)": "(Optional) Language to localize the text in."
          }
        }
      }
    },
    "CGameNotifications_Session": {
      "fields": {
        "sessionid": {
          "type": "uint64",
          "id": 1,
          "options": {
            "(description)": "The sessionid for this session."
          }
        },
        "appid": {
          "type": "uint64",
          "id": 2,
          "options": {
            "(description)": "The appid for the session."
          }
        },
        "context": {
          "type": "uint64",
          "id": 3,
          "options": {
            "(description)": "Game-specified context value the game can used to associate the session with some object on their backend."
          }
        },
        "title": {
          "type": ".CGameNotifications_LocalizedText",
          "id": 4,
          "options": {
            "(description)": "The current title for the session."
          }
        },
        "time_created": {
          "type": "uint32",
          "id": 5,
          "options": {
            "(description)": "The time the session was created."
          }
        },
        "time_updated": {
          "type": "uint32",
          "id": 6,
          "options": {
            "(description)": "The last time the session was updated."
          }
        },
        "user_status": {
          "rule": "repeated",
          "type": ".CGameNotifications_UserStatus",
          "id": 7,
          "options": {
            "(description)": "The status of all the users in the session."
          }
        }
      }
    },
    "CGameNotifications_EnumerateSessions_Response": {
      "fields": {
        "sessions": {
          "rule": "repeated",
          "type": ".CGameNotifications_Session",
          "id": 1,
          "options": {
            "(description)": "A list of the user's sessions."
          }
        }
      }
    },
    "CGameNotifications_GetSessionDetails_Request": {
      "fields": {
        "sessions": {
          "rule": "repeated",
          "type": ".CGameNotifications_GetSessionDetails_Request.RequestedSession",
          "id": 1
        },
        "appid": {
          "type": "uint32",
          "id": 2,
          "options": {
            "(description)": "The appid for the sessions."
          }
        },
        "language": {
          "type": "string",
          "id": 3,
          "options": {
            "(description)": "Language to localize the text in."
          }
        }
      },
      "nested": {
        "RequestedSession": {
          "fields": {
            "sessionid": {
              "type": "uint64",
              "id": 1,
              "options": {
                "(description)": "The sessionid to get details for."
              }
            },
            "include_auth_user_message": {
              "type": "bool",
              "id": 3,
              "options": {
                "(description)": "(Optional) Boolean determining whether the message for the authenticated user should be included. Defaults to false."
              }
            }
          }
        }
      }
    },
    "CGameNotifications_GetSessionDetails_Response": {
      "fields": {
        "sessions": {
          "rule": "repeated",
          "type": ".CGameNotifications_Session",
          "id": 1,
          "options": {
            "(description)": "The details of the session."
          }
        }
      }
    },
    "GameNotificationSettings": {
      "fields": {
        "appid": {
          "type": "uint32",
          "id": 1,
          "options": {
            "(description)": "The appid to create the session for."
          }
        },
        "allow_notifications": {
          "type": "bool",
          "id": 2,
          "options": {
            "(description)": "Whether the user allows notification for this app."
          }
        }
      }
    },
    "CGameNotifications_UpdateNotificationSettings_Request": {
      "fields": {
        "game_notification_settings": {
          "rule": "repeated",
          "type": ".GameNotificationSettings",
          "id": 1
        }
      }
    },
    "CGameNotifications_UpdateNotificationSettings_Response": {
      "fields": {}
    },
    "CGameNotifications_OnNotificationsRequested_Notification": {
      "fields": {
        "steamid": {
          "type": "fixed64",
          "id": 1,
          "options": {
            "(description)": "steamid of the user who notifications were requested for."
          }
        },
        "appid": {
          "type": "uint32",
          "id": 2,
          "options": {
            "(description)": "The appid that requested notifications."
          }
        }
      }
    },
    "CGameNotifications_OnUserStatusChanged_Notification": {
      "fields": {
        "steamid": {
          "type": "fixed64",
          "id": 1,
          "options": {
            "(description)": "steamid of the user whose status changed."
          }
        },
        "sessionid": {
          "type": "uint64",
          "id": 2,
          "options": {
            "(description)": "The sessionid of the session where the user's status was changed."
          }
        },
        "appid": {
          "type": "uint32",
          "id": 3,
          "options": {
            "(description)": "The appid of the session where the user's status changed."
          }
        },
        "status": {
          "type": ".CGameNotifications_UserStatus",
          "id": 4,
          "options": {
            "(description)": "(Optional) New status of the user."
          }
        },
        "removed": {
          "type": "bool",
          "id": 5,
          "options": {
            "(description)": "(Optional) User has been removed from the session."
          }
        }
      }
    },
    "GameNotifications": {
      "options": {
        "(service_description)": "A service for functions related to the asyncronous game notification server."
      },
      "methods": {
        "UserCreateSession": {
          "requestType": ".CGameNotifications_CreateSession_Request",
          "responseType": ".CGameNotifications_CreateSession_Response",
          "options": {
            "(method_description)": "Creates an async game session"
          }
        },
        "UserDeleteSession": {
          "requestType": ".CGameNotifications_DeleteSession_Request",
          "responseType": ".CGameNotifications_DeleteSession_Response",
          "options": {
            "(method_description)": "Deletes an async game session"
          }
        },
        "UserUpdateSession": {
          "requestType": ".CGameNotifications_UpdateSession_Request",
          "responseType": ".CGameNotifications_UpdateSession_Response",
          "options": {
            "(method_description)": "Updates an async game session"
          }
        },
        "EnumerateSessions": {
          "requestType": ".CGameNotifications_EnumerateSessions_Request",
          "responseType": ".CGameNotifications_EnumerateSessions_Response",
          "options": {
            "(method_description)": "Enumerates a user's sessions"
          }
        },
        "GetSessionDetails": {
          "requestType": ".CGameNotifications_GetSessionDetails_Request",
          "responseType": ".CGameNotifications_GetSessionDetails_Response",
          "options": {
            "(method_description)": "Get the details for a specific session"
          }
        },
        "UpdateNotificationSettings": {
          "requestType": ".CGameNotifications_UpdateNotificationSettings_Request",
          "responseType": ".CGameNotifications_UpdateNotificationSettings_Response",
          "options": {
            "(method_description)": "Updates whether a user allows game notifications for a specific app"
          }
        }
      }
    },
    "GameNotificationsClient": {
      "options": {
        "(service_description)": "Client notifications",
        "(service_execution_site)": "k_EProtoExecutionSiteSteamClient"
      },
      "methods": {
        "OnNotificationsRequested": {
          "requestType": ".CGameNotifications_OnNotificationsRequested_Notification",
          "responseType": ".NoResponse",
          "options": {
            "(method_description)": "Requests that the user opt into notifications"
          }
        },
        "OnUserStatusChanged": {
          "requestType": ".CGameNotifications_OnUserStatusChanged_Notification",
          "responseType": ".NoResponse",
          "options": {
            "(method_description)": "Notification that the user's status has changed"
          }
        }
      }
    },
    "description": {
      "type": "string",
      "id": 50000,
      "extend": ".google.protobuf.FieldOptions"
    },
    "service_description": {
      "type": "string",
      "id": 50000,
      "extend": ".google.protobuf.ServiceOptions"
    },
    "service_execution_site": {
      "type": ".EProtoExecutionSite",
      "id": 50008,
      "extend": ".google.protobuf.ServiceOptions",
      "options": {
        "default": "k_EProtoExecutionSiteUnknown"
      }
    },
    "method_description": {
      "type": "string",
      "id": 50000,
      "extend": ".google.protobuf.MethodOptions"
    },
    "enum_description": {
      "type": "string",
      "id": 50000,
      "extend": ".google.protobuf.EnumOptions"
    },
    "enum_value_description": {
      "type": "string",
      "id": 50000,
      "extend": ".google.protobuf.EnumValueOptions"
    },
    "EProtoExecutionSite": {
      "values": {
        "k_EProtoExecutionSiteUnknown": 0,
        "k_EProtoExecutionSiteSteamClient": 2
      }
    },
    "NoResponse": {
      "fields": {}
    },
    "google": {
      "nested": {
        "protobuf": {
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "public_dependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weak_dependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "message_type": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enum_type": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "source_code_info": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nested_type": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enum_type": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extension_range": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneof_decl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reserved_range": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reserved_name": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "type_name": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "default_value": {
                  "type": "string",
                  "id": 7
                },
                "oneof_index": {
                  "type": "int32",
                  "id": 9
                },
                "json_name": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "input_type": {
                  "type": "string",
                  "id": 2
                },
                "output_type": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "client_streaming": {
                  "type": "bool",
                  "id": 5
                },
                "server_streaming": {
                  "type": "bool",
                  "id": 6
                }
              }
            },
            "FileOptions": {
              "fields": {
                "java_package": {
                  "type": "string",
                  "id": 1
                },
                "java_outer_classname": {
                  "type": "string",
                  "id": 8
                },
                "java_multiple_files": {
                  "type": "bool",
                  "id": 10
                },
                "java_generate_equals_and_hash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "java_string_check_utf8": {
                  "type": "bool",
                  "id": 27
                },
                "optimize_for": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "go_package": {
                  "type": "string",
                  "id": 11
                },
                "cc_generic_services": {
                  "type": "bool",
                  "id": 16
                },
                "java_generic_services": {
                  "type": "bool",
                  "id": 17
                },
                "py_generic_services": {
                  "type": "bool",
                  "id": 18
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23
                },
                "cc_enable_arenas": {
                  "type": "bool",
                  "id": 31
                },
                "objc_class_prefix": {
                  "type": "string",
                  "id": 36
                },
                "csharp_namespace": {
                  "type": "string",
                  "id": 37
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "message_set_wire_format": {
                  "type": "bool",
                  "id": 1
                },
                "no_standard_descriptor_accessor": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3
                },
                "map_entry": {
                  "type": "bool",
                  "id": 7
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  8,
                  8
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3
                },
                "weak": {
                  "type": "bool",
                  "id": 10
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allow_alias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifier_value": {
                  "type": "string",
                  "id": 3
                },
                "positive_int_value": {
                  "type": "uint64",
                  "id": 4
                },
                "negative_int_value": {
                  "type": "int64",
                  "id": 5
                },
                "double_value": {
                  "type": "double",
                  "id": 6
                },
                "string_value": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregate_value": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "name_part": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "is_extension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leading_comments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailing_comments": {
                      "type": "string",
                      "id": 4
                    },
                    "leading_detached_comments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "source_file": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}